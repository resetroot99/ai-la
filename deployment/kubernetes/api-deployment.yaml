# AI-LA API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-la-api
  namespace: ai-la
  labels:
    app: ai-la-api
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-la-api
  template:
    metadata:
      labels:
        app: ai-la-api
    spec:
      containers:
      - name: api
        image: registry.ai-la.dev/ai-la-api:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-la-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ai-la-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ai-la-secrets
              key: jwt-secret
        - name: STRIPE_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-la-secrets
              key: stripe-api-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ai-la-api
  namespace: ai-la
spec:
  selector:
    app: ai-la-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-la-api-hpa
  namespace: ai-la
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-la-api
  minReplicas: 2
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Model Inference Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-la-inference
  namespace: ai-la
  labels:
    app: ai-la-inference
    component: ml
spec:
  replicas: 5
  selector:
    matchLabels:
      app: ai-la-inference
  template:
    metadata:
      labels:
        app: ai-la-inference
    spec:
      containers:
      - name: inference
        image: registry.ai-la.dev/ai-la-inference:latest
        ports:
        - containerPort: 11434
          name: ollama
        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0:11434"
        - name: OLLAMA_MODELS
          value: "/models"
        volumeMounts:
        - name: models
          mountPath: /models
        resources:
          requests:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
          limits:
            memory: "16Gi"
            cpu: "8000m"
            nvidia.com/gpu: 1
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: ai-la-models-pvc
      nodeSelector:
        node-type: gpu
---
apiVersion: v1
kind: Service
metadata:
  name: ai-la-inference
  namespace: ai-la
spec:
  selector:
    app: ai-la-inference
  ports:
  - protocol: TCP
    port: 11434
    targetPort: 11434
  type: ClusterIP
---
# TECP Verification Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-la-tecp
  namespace: ai-la
  labels:
    app: ai-la-tecp
    component: verification
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-la-tecp
  template:
    metadata:
      labels:
        app: ai-la-tecp
    spec:
      containers:
      - name: tecp
        image: registry.ai-la.dev/ai-la-tecp:latest
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-la-secrets
              key: database-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: ai-la-tecp
  namespace: ai-la
spec:
  selector:
    app: ai-la-tecp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8001
  type: ClusterIP
---
# Ingress Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-la-ingress
  namespace: ai-la
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.ai-la.dev
    secretName: ai-la-tls
  rules:
  - host: api.ai-la.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-la-api
            port:
              number: 80
---
# Persistent Volume Claim for Models
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-la-models-pvc
  namespace: ai-la
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: efs-sc

